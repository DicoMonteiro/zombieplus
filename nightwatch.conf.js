// Autogenerated by Nightwatch
// Trabalhando com o babel para interpretar o ES6
require('babel-core/register')

// Refer to the online docs for more details: https://nightwatchjs.org/gettingstarted/configuration/
const Services = {}; loadServices();

// Importar o pacote do do chromedriver e geckodriver para facilitar a comunicação com o browser
const chromedriver = require('chromedriver');
const geckodriver = require('geckodriver')

const testUrl = "http://zombie-web:5000"
const defaultRimeout = 15000

module.exports = {
  // An array of folders (excluding subfolders) where your tests are located;
  // if this is not specified, the test source must be passed as the second argument to the test runner.
  src_folders: ['tests'],

  // See https://nightwatchjs.org/guide/working-with-page-objects/
  page_objects_path: './pages',

  // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-commands
  custom_commands_path:  '',

  // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-assertions
  custom_assertions_path: '',

  // See https://nightwatchjs.org/guide/#external-globals
  globals_path : './hooks/global.js',

  webdriver: {
      start_process: true,
      // server_path: chromedriver.path,
      // port: 9515
  },

  // Paralelizar testes
  // E aumentar a quantidade de execução em paralelo, habilitando o enabled
  test_workers: {
      enabled: false,
      workers: 4
  },

  test_settings: {
    default: {
      launch_url: testUrl,
      globals: {
        waitForConditionTimeout: defaultRimeout // Para quando ter uma conexão/rede ficar lenta momentanea da internet
      },

      webdriver: {
        server_path: chromedriver.path,
        port: 9515
      },
      
      // disable_error_log: false,
      // launch_url: 'https://nightwatchjs.org',

      'screenshots': {
				'enabled': true, // if you want to keep screenshots
				'path': './e2e-tests/screenshots/' // save screenshots here, but you can define it when you do the screenshot
			},
      // screenshots: {
      //   enabled: false,
      //   path: 'screens',
      //   on_failure: true
      // },

      desiredCapabilities: {
        browserName : 'chrome'
      },

      // webdriver: {
      //   start_process: true,
      //   server_path: (Services.geckodriver ? Services.geckodriver.path : '')
      // }
    },

    headless: {
      launch_url: testUrl,
      globals: {
        waitForConditionTimeout: defaultRimeout // Para quando ter uma conexão/rede ficar lenta momentanea da internet
      },

      webdriver: {
        server_path: chromedriver.path,
        port: 9515
      },
      
      // disable_error_log: false,
      // launch_url: 'https://nightwatchjs.org',

      'screenshots': {
				'enabled': true, // if you want to keep screenshots
				'path': './e2e-tests/screenshots/' // save screenshots here, but you can define it when you do the screenshot
			},
      // screenshots: {
      //   enabled: false,
      //   path: 'screens',
      //   on_failure: true
      // },

      desiredCapabilities: {
        browserName : 'chrome',
        chromeOptions : {
          w3c: false,
          args: [
            '--headless',
            '--no-sandbox',
            '--window-size=1400, 900'
          ]
        }
      },

      // webdriver: {
      //   start_process: true,
      //   server_path: (Services.geckodriver ? Services.geckodriver.path : '')
      // }
    },

    // Configurando o Firefox para executar no ambiente do Firefox
    firefox: {
      launch_url: testUrl,
      globals: {
        waitForConditionTimeout: defaultRimeout // Para quando ter uma conexão/rede ficar lenta momentanea da internet
      },

      webdriver: {
        server_path: geckodriver.path,
        port: 4444
      },
      
      'screenshots': {
				'enabled': true, // if you want to keep screenshots
				'path': './e2e-tests/screenshots/' // save screenshots here, but you can define it when you do the screenshot
			},
      // disable_error_log: false,
      // launch_url: 'https://nightwatchjs.org',

      // screenshots: {
      //   enabled: false,
      //   path: 'screens',
      //   on_failure: true
      // },

      desiredCapabilities: {
        browserName : 'firefox',
        'marionette': true,
        'javascriptEnabled': true, // turn off to test progressive enhancement
        acceptInsecureCerts: true
      }
    },

    // Simulando um novo ambiente de testes em Homologação, Stage, Produção
    stage: {
      launch_url: "http://stage.zombieplus.com.br",
    },

    // safari: {
    //   desiredCapabilities : {
    //     browserName : 'safari',
    //     alwaysMatch: {
    //       acceptInsecureCerts: false
    //     }
    //   },
    //   webdriver: {
    //     port: 4445,
    //     start_process: true,
    //     server_path: '/usr/bin/safaridriver'
    //   }
    // },

    // firefox: {
    //   desiredCapabilities : {
    //     browserName : 'firefox',
    //     alwaysMatch: {
    //       // Enable this if you encounter unexpected SSL certificate errors in Firefox
    //       // acceptInsecureCerts: true,
    //       'moz:firefoxOptions': {
    //         args: [
    //           // '-headless',
    //           // '-verbose'
    //         ],
    //       }
    //     }
    //   },
    //   webdriver: {
    //     start_process: true,
    //     port: 4444,
    //     server_path: (Services.geckodriver ? Services.geckodriver.path : ''),
    //     cli_args: [
    //       // very verbose geckodriver logs
    //       // '-vv'
    //     ]
    //   }
    // },

    // chrome: {
    //   desiredCapabilities : {
    //     browserName : 'chrome',
    //     chromeOptions : {
    //       // This tells Chromedriver to run using the legacy JSONWire protocol (not required in Chrome 78)
    //       // w3c: false,
    //       // More info on Chromedriver: https://sites.google.com/a/chromium.org/chromedriver/
    //       args: [
    //         //'--no-sandbox',
    //         //'--ignore-certificate-errors',
    //         //'--allow-insecure-localhost',
    //         //'--headless'
    //       ]
    //     }
    //   },

      // webdriver: {
      //   start_process: true,
      //   port: 9515,
      //   server_path: (Services.chromedriver ? Services.chromedriver.path : ''),
      //   cli_args: [
      //     // --verbose
      //   ]
      // }
    // },

    //////////////////////////////////////////////////////////////////////////////////
    // Configuration for when using the browserstack.com cloud service               |
    //                                                                               |
    // Please set the username and access key by setting the environment variables:  |
    // - BROWSERSTACK_USER                                                           |
    // - BROWSERSTACK_KEY                                                            |
    // .env files are supported                                                      |
    //////////////////////////////////////////////////////////////////////////////////
    // browserstack: {
    //   selenium: {
    //     host: 'hub-cloud.browserstack.com',
    //     port: 443
    //   },
      // More info on configuring capabilities can be found on:
      // https://www.browserstack.com/automate/capabilities?tag=selenium-4
      // desiredCapabilities: {
      //   'bstack:options' : {
      //     local: 'false',
      //     userName: '${BROWSERSTACK_USER}',
      //     accessKey: '${BROWSERSTACK_KEY}',
      //   }
      // },

    //   disable_error_log: true,
    //   webdriver: {
    //     keep_alive: true,
    //     start_process: false
    //   }
    // },

    // 'browserstack.chrome': {
    //   extends: 'browserstack',
    //   desiredCapabilities: {
    //     browserName: 'chrome',
    //     chromeOptions : {
    //       // This tells Chromedriver to run using the legacy JSONWire protocol
    //       // More info on Chromedriver: https://sites.google.com/a/chromium.org/chromedriver/
    //       w3c: false
    //     }
    //   }
    // },

    // 'browserstack.firefox': {
    //   extends: 'browserstack',
    //   desiredCapabilities: {
    //     browserName: 'firefox'
    //   }
    // },

    // 'browserstack.ie': {
    //   extends: 'browserstack',
    //   desiredCapabilities: {
    //     browserName: 'IE',
    //     browserVersion: '11.0',
    //     'bstack:options' : {
    //       os: 'Windows',
    //       osVersion: '10',
    //       local: 'false',
    //       seleniumVersion: '3.5.2',
    //       resolution: '1366x768'
    //     }
    //   }
    // },

    //////////////////////////////////////////////////////////////////////////////////
    // Configuration for when using the Selenium service, either locally or remote,  |
    //  like Selenium Grid                                                           |
    //////////////////////////////////////////////////////////////////////////////////
    selenium: {
      // Selenium Server is running locally and is managed by Nightwatch
      selenium: {
        start_process: true,
        port: 4444,
        server_path: (Services.seleniumServer ? Services.seleniumServer.path : ''),
        cli_args: {
          'webdriver.gecko.driver': (Services.geckodriver ? Services.geckodriver.path : ''),
          'webdriver.chrome.driver': (Services.chromedriver ? Services.chromedriver.path : '')
        }
      }
    },

    'selenium.chrome': {
      extends: 'selenium',
      desiredCapabilities: {
        browserName: 'chrome',
        chromeOptions : {
          w3c: false
        }
      }
    },

    'selenium.firefox': {
      extends: 'selenium',
      launch_url: testUrl,
      globals: {
        waitForConditionTimeout: defaultRimeout // Para quando ter uma conexão/rede ficar lenta momentanea da internet
      },

      webdriver: {
        server_path: geckodriver.path,
        port: 4444
      },
      
      'screenshots': {
				'enabled': true, // if you want to keep screenshots
				'path': './e2e-tests/screenshots/' // save screenshots here, but you can define it when you do the screenshot
			},
      // disable_error_log: false,
      // launch_url: 'https://nightwatchjs.org',

      // screenshots: {
      //   enabled: false,
      //   path: 'screens',
      //   on_failure: true
      // },

      desiredCapabilities: {
        browserName : 'firefox',
        'marionette': true,
        'javascriptEnabled': true, // turn off to test progressive enhancement
        acceptInsecureCerts: true
      }
      // desiredCapabilities: {
        // browserName: 'firefox',
        // 'moz:firefoxOptions': {
        //   args: [
        //     // '-headless',
        //     // '-verbose'
        //   ]
        // }
      // }
    }
  }
};

function loadServices() {
  try {
    Services.seleniumServer = require('selenium-server');
  } catch (err) {}

  try {
    Services.chromedriver = require('chromedriver');
  } catch (err) {}

  try {
    Services.geckodriver = require('geckodriver');
  } catch (err) {}
}
